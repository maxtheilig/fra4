################################################################################
#
# Makefile to compile and link C programs with or without MPI subroutines
#
# Version valid for Linux machines with MPICH
#
# "make" compiles and links the specified main programs and modules,
# using the specified libraries (if any), and produces the executables
#
# "make clean" removes all files generated by "make"
#
# Dependencies on included files are automatically taken care of
#
################################################################################

all: rmxeq mkdep mkxeq
.PHONY: all

# main programs and modules to be compiled

MAIN = test

RANDOM = ranlxd random_su3

ADMIN = init copy sun_vfunc endian error_checks utils flags

IO = IO_utils inp_IO out_IO config_IO

HMC = hmc action dirac integrate liealg get_bosons wact_fcts

OBS = plaquette polyakov inline ttrans

MAT = lu_decomp mat_calc

MODULES = $(RANDOM) $(ADMIN) $(IO) $(HMC) $(OBS) $(MAT)


# search path for modules

MDIR = ../modules

VPATH = .:$(MDIR)/random:$(MDIR)/admin:$(MDIR)/io:$(MDIR)/hmc:$(MDIR)/obs:$(MDIR)/mat


# Logging option (-mpilog or -mpitrace or -mpianim)

LOGOPTION =


# additional include directories

INCPATH = $(MPIR_HOME)/include ../include


# additional libraries

LIBS = m

LIBPATH = $(MPIR_HOME)/lib


# scheduling and optimization options

# compiler flags
CFLAGS = -O3

############################## do not change ###################################

SHELL=/bin/bash
CC=gcc
CLINKER=$(CC)

PGMS= $(MAIN) $(MODULES)

-include $(addsuffix .d,$(PGMS))


# rule to make dependencies

$(addsuffix .d,$(PGMS)): %.d: %.c Makefile
	@ $(GCC) -ansi $< -MM $(addprefix -I,$(INCPATH)) -o $@


# rule to compile source programs

$(addsuffix .o,$(PGMS)): %.o: %.c Makefile
	$(CC) $< -c $(CFLAGS) $(LOGOPTION) $(addprefix -I,$(INCPATH))


# rule to link object files

$(MAIN): %: %.o $(addsuffix .o,$(MODULES)) Makefile
	$(CLINKER) $< $(addsuffix .o,$(MODULES)) $(CFLAGS) $(LOGOPTION) \
        $(addprefix -L,$(LIBPATH)) $(addprefix -l,$(LIBS)) -o $@


# produce executables

mkxeq: $(MAIN)


# remove old executables

rmxeq:
	@ -rm -f $(MAIN); \
        echo "delete old executables"


# make dependencies

mkdep:  $(addsuffix .d,$(PGMS))
	@ echo "generate tables of dependencies"


# clean directory

clean:
	@ -rm -rf *.d *.o *.alog *.clog *.slog $(MAIN)
.PHONY: clean

################################################################################
